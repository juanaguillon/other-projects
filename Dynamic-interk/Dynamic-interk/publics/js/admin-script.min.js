(function (a) { function b(k) { k.checked = !1, jQuery(k).attr('disabled', !0), jQuery(k).closest('.dyn_box_content').css('background-color', '#F0F0F0') } function c(k = !1) { var l = {}; if (!k) { var m = a('.names_pages_selected'), n = m.children('.dyn_ajax_id').val(); l[0] = { check: '<input type="checkbox" name="dyn_table_checks[]"  value="' + n + '" checked />', id: n, name: m.children('.dyn_ajax_title').text(), date: m.children('.dyn_ajax_date').val() } } else for (var n, o = 0; o < k.length; o++)n = k[o].value, l[o] = { check: '<input type="checkbox" name="dyn_table_checks[]" value="' + n + '" checked />', id: n, name: a(k[o]).parent().prev().html(), date: a(k[o]).parent().next().find('span').html() }, b(k[o]); var p = document.getElementById('table_result'), q = new dyn_show_table(l, p) } function d() { a('#respond').empty() } function f() { a('#dynil_anex_pages').val('') } function g() { for (var k = a('#respond').find('.dyn_ajax_id'), l = a('[name="dyn_table_checks[]"]'), m = 0; m < k.length; m++)for (var n = 0; n < l.length; n++)l[n].value == k[m].value && jQuery(k[m]).parent().addClass('dyn_ajax_is_put') } function h(k) { for (var l = a(k).children('.dyn_ajax_id').val(), m = a('[name="dynil_set_pages[]"]'), n = 0; n < m.length; n++)m[n].value == l && b(m[n]) } function j() { jQuery('#respond .names_pages').hover(function () { var k = a(this); if (0 < a('.names_pages_selected').length) { var l = a('.names_pages_selected'); l.removeClass('names_pages_selected') } k.toggleClass('names_pages_selected') }).click(function () { a(this).hasClass('dyn_ajax_is_put') ? alert(Messages.cantToTable) : (c(), g(), h(this)) }) } jQuery(document).ready(function (k) { k('#dynil_anex_pages').keypress(function (m) { 13 == m.keyCode && m.preventDefault() }), k('body').on('click', d), k('.dynil_ajax_section .content').click(function (m) { m.stopPropagation() }), k('#dynil_anex_pages').keyup(function (m) { if ('' == k(this).val() || 8 == m.keyCode) d(); else if (40 == m.keyCode) { if (0 < k('.names_pages_selected').length) { var n = k('.names_pages_selected'); n.next().toggleClass('names_pages_selected'), n.removeClass('names_pages_selected') } else k('#respond').children().first().toggleClass('names_pages_selected'); } else if (!(38 == m.keyCode)) { if (13 == m.keyCode) { if (0 < k('.names_pages_selected').length) { var o = document.getElementsByClassName('names_pages_selected'); h(o), c(), d(), f(), g() } return !1 } if (27 == m.keyCode) d(); else if (3 < k(this).val().length) { var p = new Ajax_request({ data: { action: 'show_pages', name: capitalizeFirstLetter(k(this).val()) }, success: function (q) { d(), k('#respond').append(q) }, complete: function () { g(), j() } }); p.exec() } } else if (0 < k('.names_pages_selected').length) { var n = k('.names_pages_selected'); n.prev().toggleClass('names_pages_selected'), n.removeClass('names_pages_selected') } }), k('#dynil_load_pages').click(function () { var m = k('.dyn_box_content').children('div').next().children('input[type=checkbox]:checked'); c(m) }), k('#dyn_select_all_pages').click(function () { var m = k('.dyn_box_content input:checkbox'), n = 0; m.each(function () { k(this).prop('checked') && n++ }); m.length == n || m.attr('checked', 'checked') }), k('#dyn_unselect_all_pages').click(function () { var m = k('.dyn_box_content input:checkbox'), n = 0; m.each(function () { k(this).prop('checked') || n++ }); m.length == n || m.attr('checked', !1) }), k('#dyn_send_pages').click(function () { document.dyn_form_send_pages.submit() }) }) })(jQuery);